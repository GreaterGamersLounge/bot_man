# frozen_string_literal: true

adjective_list = [
  "attractive",
  "bald",
  "beautiful",
  "chubby",
  "clean",
  "dazzling",
  "drab",
  "elegant",
  "fancy",
  "fit",
  "flabby",
  "glamorous",
  "gorgeous",
  "handsome",
  "long",
  "magnificent",
  "muscular",
  "plain",
  "plump",
  "quaint",
  "scruffy",
  "shapely",
  "short",
  "skinny",
  "stocky",
  "ugly",
  "unkempt",
  "unsightly",
  "aggressive",
  "agreeable",
  "ambitious",
  "brave",
  "calm",
  "delightful",
  "eager",
  "faithful",
  "gentle",
  "happy",
  "jolly",
  "kind",
  "lively",
  "nice",
  "obedient",
  "polite",
  "proud",
  "silly",
  "thankful",
  "victorious",
  "witty",
  "wonderful",
  "zealous",
  "broad",
  "chubby",
  "crooked",
  "curved",
  "deep",
  "flat",
  "high",
  "hollow",
  "low",
  "narrow",
  "refined",
  "round",
  "shallow",
  "skinny",
  "square",
  "steep",
  "straight",
  "wide",
  "crashing",
  "deafening",
  "echoing",
  "faint",
  "harsh",
  "hissing",
  "howling",
  "loud",
  "melodic",
  "noisy",
  "purring",
  "quiet",
  "rapping",
  "raspy",
  "rhythmic",
  "screeching",
  "shrilling",
  "squeaking",
  "thundering",
  "tinkling",
  "wailing",
  "whining",
  "whispering",
  "ancient",
  "brief",
  "early",
  "fast",
  "future",
  "late",
  "long",
  "modern",
  "old",
  "old-fashioned",
  "prehistoric",
  "quick",
  "rapid",
  "short",
  "slow",
  "swift",
  "young",
  "acidic",
  "bitter",
  "cool",
  "creamy",
  "delicious",
  "disgusting",
  "fresh",
  "greasy",
  "juicy",
  "hot",
  "moldy",
  "nutritious",
  "nutty",
  "putrid",
  "rancid",
  "ripe",
  "rotten",
  "salty",
  "savory",
  "sour",
  "spicy",
  "spoiled",
  "stale",
  "sweet",
  "tangy",
  "tart",
  "tasteless",
  "tasty",
  "yummy",
  "breezy",
  "bumpy",
  "chilly",
  "cold",
  "cool",
  "cuddly",
  "damaged",
  "damp",
  "dirty",
  "dry",
  "flaky",
  "fluffy",
  "freezing",
  "greasy",
  "hot",
  "icy",
  "loose",
  "melted",
  "prickly",
  "rough",
  "shaggy",
  "sharp",
  "slimy",
  "sticky",
  "strong",
  "tight",
  "uneven",
  "warm",
  "weak",
  "wet",
  "wooden"
]

noun_list = [
  "account",
  "act",
  "adjustment",
  "advertisement",
  "agreement",
  "air",
  "amount",
  "amusement",
  "animal",
  "answer",
  "apparatus",
  "approval",
  "argument",
  "art",
  "attack",
  "attempt",
  "attention",
  "attraction",
  "authority",
  "balance",
  "behavior",
  "bite",
  "blood",
  "blow",
  "bread",
  "breath",
  "building",
  "burn",
  "burst",
  "business",
  "butter",
  "canvas",
  "cause",
  "chalk",
  "chance",
  "cloth",
  "coal",
  "color",
  "comfort",
  "committee",
  "company",
  "competition",
  "condition",
  "connection",
  "control",
  "cook",
  "copper",
  "copy",
  "cork",
  "copy",
  "cough",
  "country",
  "cover",
  "crack",
  "credit",
  "crime",
  "crush",
  "cry",
  "current",
  "curve",
  "damage",
  "danger",
  "day",
  "death",
  "debt",
  "decision",
  "degree",
  "design",
  "desire",
  "destruction",
  "detail",
  "development",
  "digestion",
  "direction",
  "discovery",
  "discussion",
  "disease",
  "disgust",
  "distance",
  "distribution",
  "doubt",
  "drink",
  "driving",
  "dust",
  "earth",
  "edge",
  "education",
  "effect",
  "end",
  "error",
  "event",
  "exchange",
  "existence",
  "expansion",
  "experience",
  "expert",
  "fact",
  "fall",
  "fear",
  "feeling",
  "fiction",
  "field",
  "fight",
  "fire",
  "flame",
  "flight",
  "flower",
  "fold",
  "food",
  "force",
  "form",
  "friend",
  "front",
  "fruit",
  "glass",
  "gold",
  "government",
  "grain",
  "grass",
  "grip",
  "group",
  "growth",
  "guide",
  "harbor",
  "harmony",
  "hate",
  "hearing",
  "heat",
  "help",
  "history",
  "hole",
  "hope",
  "hour",
  "humor",
  "ice",
  "idea",
  "impulse",
  "increase",
  "industry",
  "ink",
  "insect",
  "instrument",
  "insurance",
  "interest",
  "invention",
  "iron",
  "jelly",
  "join",
  "journey",
  "judge",
  "jump",
  "kick",
  "kiss",
  "knowledge",
  "land",
  "language",
  "laugh",
  "low",
  "lead",
  "learning",
  "leather",
  "letter",
  "level",
  "lift",
  "light",
  "limit",
  "linen",
  "liquid",
  "list",
  "look",
  "loss",
  "love",
  "machine",
  "man",
  "manager",
  "mark",
  "market",
  "mass",
  "measure",
  "meat",
  "meeting",
  "memory",
  "metal",
  "middle",
  "milk",
  "mind",
  "mine",
  "minute",
  "mist",
  "money",
  "month",
  "morning",
  "motion",
  "mountain",
  "move",
  "music",
  "name",
  "nation",
  "need",
  "news",
  "night",
  "noise",
  "note",
  "number",
  "observation",
  "offer",
  "oil",
  "operation",
  "opinion",
  "order",
  "organization",
  "ornament",
  "owner",
  "page",
  "pain",
  "paint",
  "paper",
  "part",
  "paste",
  "payment",
  "peace",
  "plant",
  "play",
  "pleasure",
  "point",
  "poison",
  "polish",
  "porter",
  "position",
  "powder",
  "power",
  "price",
  "print",
  "process",
  "produce",
  "profit",
  "property",
  "prose",
  "protest",
  "pull",
  "punishment",
  "purpose",
  "push",
  "quality",
  "question",
  "rain",
  "range",
  "rate",
  "ray",
  "reaction",
  "reading",
  "reason",
  "record",
  "regret",
  "relation",
  "religion",
  "representative",
  "request",
  "respect",
  "rest",
  "reward",
  "rhythm",
  "rice",
  "river",
  "road",
  "roll",
  "room",
  "rub",
  "rule",
  "run",
  "salt",
  "sand",
  "scale",
  "sea",
  "seat",
  "secretary",
  "selection",
  "self",
  "sense",
  "servant",
  "sex",
  "shade",
  "shake",
  "shame",
  "shock",
  "side",
  "sign",
  "silk",
  "silver",
  "sister",
  "size",
  "sky",
  "sleep",
  "slip",
  "slope",
  "smash",
  "smell",
  "smile",
  "smoke",
  "sneeze",
  "snow",
  "soap",
  "society",
  "song",
  "sort",
  "sound",
  "soup",
  "space",
  "stage",
  "start",
  "statement",
  "steam",
  "steel",
  "step",
  "stitch",
  "stone",
  "stop",
  "story",
  "stretch",
  "structure",
  "substance",
  "sugar",
  "suggestion",
  "summer",
  "support",
  "surprise",
  "swim",
  "system",
  "talk",
  "taste",
  "tax",
  "teaching",
  "tendency",
  "test",
  "theory",
  "thing",
  "thought",
  "thunder",
  "time",
  "tin",
  "top",
  "touch",
  "trade",
  "transport",
  "trick",
  "trouble",
  "turn",
  "twist",
  "unit",
  "use",
  "value",
  "vessel",
  "view",
  "voice",
  "walk",
  "wash",
  "waste",
  "water",
  "wave",
  "wax",
  "weather",
  "week",
  "wind",
  "wine",
  "wood",
  "wool"
]

class TempVoiceEventContainer < BaseEventContainer
  extend Discordrb::EventContainer

  voice_state_update do |event|
    if event.channel
      handle_channel_join(event)
    end

    if event.old_channel
      handle_channel_leave(event)
    end
  end

  def self.handle_channel_join(event)
    server = event.server
    channel = event.channel

    # If it's a jump channel
    jump_channel = TemporaryVoiceChannel.where(
      server_uid: server.id,
      channel_uid: channel.id,
      is_jump_channel: true,
      active: true
    ).first

    return unless jump_channel

    # Find the actual reference to the discord channel
    discord_jump_channel =
      server.voice_channels.detect { |c| c.id == channel.id }

    # Get adjective
    adjective = adjective_list.sample.capitalize

    # Get noun
    noun = noun_list.sample.capitalize

    # Make the new channel
    new_channel = server.create_channel(
      "#{adjective} #{noun}"
      2, # type
      reason: "Creating temporary voice channel"
    )

    # Move it to be below the jump channel
    new_channel.sort_after(discord_jump_channel, true)

    # Give the user manage_channels for the temp channel
    allow = Discordrb::Permissions.new [:manage_channels]
    new_channel.define_overwrite(event.user, allow)

    # Record information to DB
    TemporaryVoiceChannel.create!(
      server_uid: server.id,
      creator_uid: event.user.id,
      channel_uid: new_channel.id,
      is_jump_channel: false,
      active: true
    )

    # Move the user to the new channel
    server.move(event.user, new_channel)
  end

  def self.handle_channel_leave(event)
    server = event.server
    old_channel = event.old_channel

    # If it's a temp channel
    temp_channel = TemporaryVoiceChannel.where(
      server_uid: server.id,
      channel_uid: old_channel.id,
      is_jump_channel: false,
      active: true
    ).first

    return unless temp_channel

    # Find the actual reference to the discord channel
    discord_temp_channel =
      server.voice_channels.detect { |c| c.id == old_channel.id }

    # Check to see if anyone else is in the channel
    return unless discord_temp_channel.users.empty?

    # Mark the channel as inactive
    temp_channel.update!(active: false)

    # Delete the channel
    discord_temp_channel.delete
  end
end
